[{"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/index.js":"1","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/App.js":"2","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Pagination.js":"3","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/AddForm.js":"4","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/EditForm.js":"5","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/MovieList.js":"6","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Movie.js":"7","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/contexts/MovieContext.js":"8"},{"size":225,"mtime":1644769256987,"results":"9","hashOfConfig":"10"},{"size":501,"mtime":1644860281352,"results":"11","hashOfConfig":"10"},{"size":1999,"mtime":1644773434468,"results":"12","hashOfConfig":"10"},{"size":1877,"mtime":1644773434467,"results":"13","hashOfConfig":"10"},{"size":1932,"mtime":1644863343111,"results":"14","hashOfConfig":"10"},{"size":2993,"mtime":1644774532665,"results":"15","hashOfConfig":"10"},{"size":2081,"mtime":1644863343112,"results":"16","hashOfConfig":"10"},{"size":1503,"mtime":1644863343113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nr2wl6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/index.js",[],["38","39"],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/App.js",["40","41","42"],"import React, {useState, useEffect} from \"react\";\nimport MovieList from './components/MovieList';\nimport EmployeeContextProvider from './contexts/MovieContext';\nimport Axios from 'axios';\n\nfunction App() {\n\n  return (\n    <div className=\"container-xl\">\n      <div className=\"table-responsive\">\n        <div className=\"table-wrapper\">\n          <EmployeeContextProvider>\n            <MovieList />\n          </EmployeeContextProvider>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Pagination.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/AddForm.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/EditForm.js",["43","44"],"import { Form, Button } from \"react-bootstrap\"\n\nimport {MovieContext} from '../contexts/MovieContext';\nimport {useContext, useState} from 'react';\nimport Movie from './Movie.js';\n\n\nconst EditForm = ({theMovie}) =>{\n\n    const id = theMovie.id;\n\n    const [name, setName] = useState(theMovie.name);\n    const [rank, setRank] = useState(theMovie.rank);\n    const [year, setYear] = useState(theMovie.year);\n\n    const {updateMovie} = useContext(MovieContext);\n\n    const updatedMovie = {id, name, rank, year}\n   \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateMovie(id, updatedMovie)\n        \n    }\n\n     return (\n\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e)=> setName(e.target.value)}\n                    required\n                    \n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Year *\"\n                    name=\"year\"\n                    classname=\"form-field\"\n                    value={year}\n                    onChange={(e)=> setYear(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Rank\"\n                    rows={3}\n                    name=\"rank\"\n                    classname=\"form-field\"\n                    value={rank}\n                    onChange={(e)=> setRank(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" block>\n                Edit Movie\n            </Button>\n        </Form>\n\n     )\n}\n\nexport default EditForm;","/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/MovieList.js",[],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/components/Movie.js",["45","46"],"/Users/leigh/Documents/GitHub/MCO2-Sql/views/src/contexts/MovieContext.js",["47","48"],"import {createContext, useEffect, useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Axios from 'axios';\nconst mysql = require(\"mysql2\");\n\nexport const MovieContext = createContext()\n\n\nconst MovieContextProvider  = (props) => {\n\n    const [data, setData] = useState ([])\n    useEffect(()=>{\n      Axios.get(\"http://localhost:3001/readAll\").then((response) =>{\n        console.log(\"ANSWER\")\n        setData(response.data);\n        console.log(response.data)\n      }).catch((err)=>{\n        console.log(err);\n      });\n      console.log(\"hatdog\");\n      console.log(data);\n    },[])\n\n    const [movies, setMovies] = useState([])\n\nuseEffect(()=> {\n    // console.log(movies);\n    // setMovies(JSON.parse(localStorage.getItem('movies')))\n    // console.log(movies);\n\n    setMovies(data);\n},[data])\n\n// useEffect(() => {\n//     localStorage.setItem('movies', JSON.stringify(data));\n// },[])\n\n\n\nconst sortedMovies = movies.sort((a,b)=>(a.name < b.name ? -1 : 1));\n\n\nconst addMovie = (name, rank, year) => {\n    setMovies([...movies , {id:uuidv4(), name, year, rank}])\n}\n\nconst deleteMovie = (id) => {\n    setMovies(movies.filter(movie => movie.id !== id))\n}\n\nconst updateMovie = (id, updatedMovie) => {\n    setMovies(movies.map((data) => data.id === id ? updatedMovie : data))\n\n}\n\n    return (\n        <MovieContext.Provider value={{sortedMovies, addMovie, deleteMovie, updateMovie}}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport default MovieContextProvider;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"57","line":1,"column":26,"nodeType":"55","messageId":"56","endLine":1,"endColumn":35},{"ruleId":"53","severity":1,"message":"58","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"53","severity":1,"message":"59","line":14,"column":18,"nodeType":"55","messageId":"56","endLine":14,"endColumn":25},{"ruleId":"53","severity":1,"message":"60","line":15,"column":18,"nodeType":"55","messageId":"56","endLine":15,"endColumn":25},{"ruleId":"53","severity":1,"message":"58","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":19,"column":8,"nodeType":"63","endLine":19,"endColumn":15,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":4,"column":7,"nodeType":"55","messageId":"56","endLine":4,"endColumn":12},{"ruleId":"61","severity":1,"message":"66","line":22,"column":7,"nodeType":"63","endLine":22,"endColumn":9,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Axios' is defined but never used.","'setRank' is assigned a value but never used.","'setYear' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'Movie'. Either exclude it or remove the dependency array. Outer scope values like 'Movie' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["70"],"'mysql' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: []",{"range":"76","text":"77"},"Update the dependencies array to be: [data]",{"range":"78","text":"79"},[521,528],"[]",[594,596],"[data]"]